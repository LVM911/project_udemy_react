{"ast":null,"code":"var _jsxFileName = \"/Users/Programming/Documents/sites/work/project_udemy_react/marvel/src/components/randomChar/RandomChar.js\";\nimport { Component } from 'react';\nimport MarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spiner/spiner';\nimport './randomChar.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RandomChar extends Component {\n  //Вызываем метод updateChar испольщуя котрокутор\n  constructor(props) {\n    super(props);\n    // Состояние\n    this.state = {\n      char: {},\n      loading: true\n    };\n    // создаем новое свойство внутри класа RandomChar\n    this.marvelService = new MarvelServices();\n    // method записи, перезаписи, переририсовки, персонажа\n    this.onChatLoaded = char => {\n      this.setState({\n        char\n      });\n    };\n    // Создаем отдельный метод, который будет обращаться к серверу, получать данные и записывать в state\n    this.updateChar = () => {\n      // стрелочная функция чтобы не терять контекст\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.marvelService.getCharacter(id).then(this.onChatLoaded);\n      //.getAllCharacters()\n      // .then(res => console.log(res))\n    };\n    this.updateChar();\n  }\n  render() {\n    // комплексная десструктуризация, вытаскивание данных из стейта\n    const {\n      char: {\n        name,\n        description,\n        thumbnail,\n        homepage,\n        wiki\n      },\n      loading\n    } = this.state;\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__block\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: thumbnail,\n          alt: \"Random character\",\n          className: \"randomchar__img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"randomchar__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"randomchar__name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"randomchar__descr\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"randomchar__btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: homepage,\n              className: \"button button__main\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: \"homepage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: wiki,\n              className: \"button button__secondary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: \"Wiki\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 52\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default RandomChar;","map":{"version":3,"names":["Component","MarvelServices","Spinner","thor","mjolnir","jsxDEV","_jsxDEV","RandomChar","constructor","props","state","char","loading","marvelService","onChatLoaded","setState","updateChar","id","Math","floor","random","getCharacter","then","render","name","description","thumbnail","homepage","wiki","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","href"],"sources":["/Users/Programming/Documents/sites/work/project_udemy_react/marvel/src/components/randomChar/RandomChar.js"],"sourcesContent":["import { Component } from 'react';\nimport MarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spiner/spiner';\nimport './randomChar.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    //Вызываем метод updateChar испольщуя котрокутор\n    constructor (props) {\n        super(props);\n        this.updateChar();\n    }\n\n    // Состояние\n    state = {\n        char: {},\n        loading: true\n    }\n    // создаем новое свойство внутри класа RandomChar\n    marvelService = new MarvelServices(); \n    // method записи, перезаписи, переририсовки, персонажа\n    onChatLoaded = (char) => {\n        this.setState({char})\n    }\n    // Создаем отдельный метод, который будет обращаться к серверу, получать данные и записывать в state\n    updateChar = () => { // стрелочная функция чтобы не терять контекст\n        const id = Math.floor(Math.random()*(1011400 - 1011000)+1011000);\n        this.marvelService\n        .getCharacter(id)\n        .then(this.onChatLoaded) \n        //.getAllCharacters()\n       // .then(res => console.log(res))\n    } \n\n\n    render() {\n       // комплексная десструктуризация, вытаскивание данных из стейта\n       const {char: {name, description, thumbnail, homepage, wiki}, loading} = this.state;\n       if (loading) {\n        return <Spinner/>\n       } \n        return (\n            <div className=\"randomchar\">\n                <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomChar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}